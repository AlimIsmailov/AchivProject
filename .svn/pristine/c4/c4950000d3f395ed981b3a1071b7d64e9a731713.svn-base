package com.ita.softserveinc.achiever.service;

import java.io.IOException;
import java.io.InputStream;
import java.util.List;

import javax.xml.bind.JAXBContext;
import javax.xml.bind.JAXBException;
import javax.xml.bind.Unmarshaller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.core.io.ClassPathResource;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Propagation;
import org.springframework.transaction.annotation.Transactional;

import com.ita.softserveinc.achiever.dao.IDirectionDao;
import com.ita.softserveinc.achiever.entity.Direction;
import com.ita.softserveinc.achiever.exception.ElementExistsException;
import com.ita.softserveinc.achiever.paging.DirectionPaging;

@Service
public class DirectionServiceImpl implements IDirectionService {

	@Autowired
	private IDirectionDao directionDao;

	@Transactional(propagation = Propagation.REQUIRED)
	public void create(Direction entity) throws ElementExistsException{
		if (findByName(entity.getName())!=null){
			throw new ElementExistsException();
		}
			directionDao.create(entity);
	}

	@Transactional(propagation = Propagation.REQUIRED)
	public Direction update(Direction entity) throws ElementExistsException {
		if ((findByName(entity.getName()) != null)) {
			throw new ElementExistsException();
		}
		return directionDao.update(entity);
	}

	@Transactional(propagation = Propagation.REQUIRED)
	public void delete(Direction entity) {
		directionDao.delete(entity);
	}

	public Direction findById(Long id) {
		return directionDao.findById(Direction.class, id);
	}

	public List<Direction> findAll() {
		return directionDao.findAll(Direction.class);
	}

	@Override
	public Direction findByName(String name) {
			return directionDao.findByName(name);
	}
	
	@Override
	public List<Integer> getResultsOnPageCount() {
		try {
			JAXBContext jaxbContext = JAXBContext.newInstance(DirectionPaging.class);
			Unmarshaller unmarshaller = jaxbContext.createUnmarshaller();
			ClassPathResource cpr = new ClassPathResource("/jaxb-xml/direction-paging-configuration.xml");
			InputStream inputs =  cpr.getInputStream();
			DirectionPaging result = (DirectionPaging) unmarshaller.unmarshal(inputs);
			System.err.println("Direction.getCount: "+result.getCountOfResults());
			return result.getCountOfResults();
		} catch (JAXBException e) {
			System.err.println("JAXB Exception" + e.getCause());
			//LOG.info("JAXB Exception");
		} catch (IOException e) {
			System.err.println("File not found");
			//LOG.info("File not found");
		}
		return null;
	}

}
